version: '3.7'

services:
  mongo-express:
    image: mongo-express
    env_file:
      - ./ms-menu/.env
    ports:
      - 27018:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_PORT: ${MONGODB_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
    links:
      - mongo
  mongo:
    image: mongo
    env_file:
       - ./ms-menu/.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - 27017:27017
    networks:
      - ms-products

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   networks:
  #     - ms-products
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   networks:
  #     - ms-products
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 9092:9092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  # cache:
  #   image: redis
  #   env_file:
  #     - ./ms-menu/.env
  #   command: redis-server --requirepass ${REDIS_PASS}
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - ms-products
  # api:
  #   build: .
  #   restart: always
  #   ports:
  #     -8081
  #   depends_on:
  #     - db
  #   command: ./wait-for.sh db:5432 ./startup.sh
  #   networks:
  #     - ms-products

networks:
  ms-products:
    driver: bridge